javascript:(function(){javascript: (function main() {  /* I add random characters at the end of the ID so that it does not clash with any other ID's on the page */  const ID =    '--picture-in-picture-toolbar-8743fsfjkl9274g9832fkjdslfjksl7498247389'; /* Helper functions */  const get = (selector, el = document) => el.querySelector(selector);  const getAll = (selector, el = document) =>    Array.from(el.querySelectorAll(selector));  /* Remove our toolbar if it exists */ let _toolbar = get(`#${ID}%60);  if (_toolbar) {    _toolbar.parent.removeChild(_toolbar);  }  /* create the toolbar */ const toolbar = document.createElement(    'div'  ); /* Set the toolbar's ID, so we can remove it later */  toolbar.id = ID; /* Use shadow-dom as outlined here: https://developers.google.com/web/fundamentals/web-components/shadowdom */  /* Inside shadow dom we don't have to worry about conflicting styles. */ const shadowroot = toolbar.attachShadow(    { mode: 'open' }  );  shadowroot.innerHTML = %60<style>#container {  z-index: 9999;  border: 1px solid #000;  border-radius: 3px;  padding: 0.7em;  position: fixed;  top: 0.5em;  right: 0.5em;  background-color: rgba(0,0,0,0.7);  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";}button {  padding: 0.5em 0.7em;  border-radius: 3px;  box-shadow: none;  border: 2px solid #fff;  background-color: transparent;  color: #fff;  cursor: pointer;}button:hover {  background-color: white;  color: black;}</style><div id="container">  <button aria-label="unlimited cookies" id="uc">    UC  </button> <button aria-label="no cookies" id="nc">    NC  </button> <button aria-label="unlimited lumps" id="ul">    UL  </button> <button aria-label="ruin the fun" id="rtf">    RTF  </button><button aria-label="open sesame" id="os">    OS  </button><button aria-label="golden cookie" id="gc">    GC  </button><button aria-label="choose cookies" id="cc">    CC  </button><button aria-label="choose lumps" id="cl">    CL  </button><button aria-label="choose cookies per second" id="ccps">    CCPS  </button><button aria-label="sesame reset" id="sr">    SR  </button>    <button aria-label="close" id="close">    x  </button></div>    %60;      get('#close', shadowroot).addEventListener('click', () => {    const toolbar = get(%60#${ID}%60);    if (toolbar) {      toolbar.parentNode.removeChild(toolbar);    }  });  const ucEl = get('#uc', shadowroot);  ucEl.addEventListener('click', e => {    (function(){Game.cookies=Infinity})();  });  document.body.appendChild(toolbar);  const ncEl = get('#nc', shadowroot);  ncEl.addEventListener('click', e => {    (function(){Game.cookies=0})();  });  document.body.appendChild(toolbar);  const ulEl = get('#ul', shadowroot);  ulEl.addEventListener('click', e => {    (function(){Game.lumps=Infinity})();  });  document.body.appendChild(toolbar);  const rtfEl = get('#rtf', shadowroot);  rtfEl.addEventListener('click', e => {    (function(){Game.RuinTheFun()})();  });  document.body.appendChild(toolbar);  const osEl = get('#os', shadowroot);  osEl.addEventListener('click', e => {    (function(){Game.OpenSesame()})();  });  document.body.appendChild(toolbar);  const gcEl = get('#gc', shadowroot);  gcEl.addEventListener('click', e => {    (function(){var newShimmer=new Game.shimmer("golden");newShimmer.spawnLead=1})();  });  document.body.appendChild(toolbar);  const ccEl = get('#cc', shadowroot);  ccEl.addEventListener('click', e => {    (function(){var cookies = prompt("Cookies?", "0");Game.cookies=(parseInt(cookies))})();  });  document.body.appendChild(toolbar);  const clEl = get('#cl', shadowroot);  clEl.addEventListener('click', e => {    (function(){var lumps = prompt("Lumps?", "0");Game.lumps=(parseInt(lumps))})();  });  document.body.appendChild(toolbar);  const ccpsEl = get('#ccps', shadowroot);  ccpsEl.addEventListener('click', e => {    (function(){var cookiesps = prompt("CookiesPS?", "0");Game.cookiesPs=(parseInt(cookiesps))})();  });  document.body.appendChild(toolbar);  const srEl = get('#sr', shadowroot);  srEl.addEventListener('click', e => {    (function(){Game.SesameReset()})();  });  document.body.appendChild(toolbar);})();})();
